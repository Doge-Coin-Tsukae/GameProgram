#include<stdio.h>
#include<string.h>
#include"battle.h"

#define CONIOEX
#include"conioex.h"

#define MOJIRETU (15)

//ïœêîêÈåæ
int key = 0;
int getkey;
int cooldown[3] = { 0,0,0 };
int ai_cooldown[3] = { 0,0,0 };

//êÌì¨âÊñ ÇÃòg
void haikei(int x,int y) {
	gotoxy(x, y);
	printf("Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†\n");
	printf("Å†                                              Å†                  Å†\n");
	printf("Å†                                              Å†                  Å†\n");
	printf("Å†                                              Å†                  Å†\n");
	printf("Å†                                              Å†                  Å†\n");
	printf("Å†                                              Å†                  Å†\n");
	printf("Å†                                              Å†                  Å†\n");
	printf("Å†                                              Å†                  Å†\n");
	printf("Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†Å†\n");
}

//ÉLÉÉÉâÉNÉ^Å[ÇÃÉOÉâÉtÉBÉbÉN
void character_graf(int grafnum,int x,int y) {
	if (grafnum == 0) {			//ÉçÉ{ÉbÉg
		gotoxy(x, y);
		printf("     ________     ");
		gotoxy(x, y + 1);
		printf("||  | ______ |  ||");
		gotoxy(x, y + 2);
		printf("||  | |ÅùÅú| |  ||");
		gotoxy(x, y + 3);
		printf("Å°Å°| |  Åõ| |Å°Å°");
		gotoxy(x, y + 4);
		printf("Å°Å°|  ----  |Å°Å°");
		gotoxy(x, y + 5);
		printf("Å°Å°|--------|Å°Å°");
		gotoxy(x, y + 6);
		printf("Å°Å°Å°Å°Å°Å°Å°Å°Å°");
	}
	else if(grafnum == 1){			//öMì˚óﬁ
		gotoxy(x, y);
		printf("|Å_  _______  Å^| ");
		gotoxy(x, y + 1);
		printf("|  Å^Å_ Å§ Å^Å_ | ");
		gotoxy(x, y + 2);
		printf("|Å^  ÅñÅ_Å^Åñ Å_| ");
		gotoxy(x, y + 3);
		printf("|       Å¢      | ");
		gotoxy(x, y + 4);
		printf("----------------- ");
		gotoxy(x, y + 5);
		printf("  Å°Å°Å°ÅZÅ°Å°Å°  ");
		gotoxy(x, y + 6);
		printf("Å°Å°Å°Å†Å†Å†Å°Å°Å°");
	}
	else if (grafnum == 2) {			//óÏëÃ
		gotoxy(x, y);
		printf("    |  | | |  |   ");
		gotoxy(x, y + 1);
		printf("  |  |--==--|  |  ");
		gotoxy(x, y + 2);
		printf("|  | ---  --- |  |");
		gotoxy(x, y + 3);
		printf("  |  |  == |  |   ");
		gotoxy(x, y + 4);
		printf(" || |  |  |  | || ");
		gotoxy(x, y + 5);
		printf("||Å†Å†Å°ÅôÅ°Å†Å†||");
		gotoxy(x, y + 6);
		printf("Å†Å†Å°Å°Å°Å°Å°Å†Å†");
	}
	else if (grafnum == 3) {			//íπóﬁ
		gotoxy(x, y);
		printf("  ______________  ");
		gotoxy(x, y + 1);
		printf("Å^  Åú      Åú  Å_");
		gotoxy(x, y + 2);
		printf("|       Å¢       |");
		gotoxy(x, y + 3);
		printf("|       Å§       |");
		gotoxy(x, y + 4);
		printf("Å†Å°Å°Å†Å†Å†Å°Å°Å†");
		gotoxy(x, y + 5);
		printf("Å†Å†Å°Å°Å†Å°Å°Å†Å†");
		gotoxy(x, y + 6);
		printf("Å†Å†Å†Å°Å°Å°Å†Å†Å†");
	}
	else {			//íéóﬁ
		gotoxy(x, y);
		printf("|                |");
		gotoxy(x, y + 1);
		printf("-|-|Å^^^^^^^Å_|-|-");
		gotoxy(x, y + 2);
		printf("Å^(Åù========Åù)Å_");
		gotoxy(x, y + 3);
		printf("|   |Å_ () Å^|   |");
		gotoxy(x, y + 4);
		printf("Å°Å°Å† Å_Å^ Å†Å°Å°");
		gotoxy(x, y + 5);
		printf("Å°Å°Å°Å†Å†Å†Å°Å°Å°");
		gotoxy(x, y + 6);
		printf("Å°Å°Å°Å°Å†Å°Å°Å°Å°");
	}
}

//é©êgÇÃëDÇÃï\é¶
void fune(void) {
	int i;
	const char *head[6] = { "====------=*",
							 "|Å°Å†Å†",
							 "|==-*Å_",
							 "|==-*Å^",
							 "|Å°Å†Å†",
							 "====------=*",
	};

	const char *botom[8] = { "{==========}",
							 "|Å†Å°Å†Å°Å†Å†Å†Å†",
							 "|Å°Å†Å°Å†Å°Å†Å†Å†",
							 "|Å°Å°Å°Å°Å°Å°Å°Å°",
							 "|Å°Å°Å°Å°Å°Å°Å°Å°",
							 "|Å†Å°Å†Å°Å†Å†Å†Å†",
							 "|Å°Å†Å°Å†Å°Å†Å†Å†",
							 "{==========}",
	};
	const char *leg[6] = {	"=====|----------",
							"=====|Å°Å°Å°Å°Å°",
							"     |Å°Å†Å†Å†Å†",
							"     |Å°Å†Å†Å†Å†",
							"=====|Å°Å°Å°Å°Å°",
							"=====|----------",
	};
	for (i = 0; i < 6; i++) {
		gotoxy(4, 21 + i);
		printf("%s\n", leg[i]);
	}
	for (i = 0; i < 8; i++) {
		gotoxy(20, 20 + i);
		printf("%s\n", botom[i]);
	}
	
	for (i = 0; i < 6; i++) {
		gotoxy(37, 21 + i);
		printf("%s\n", head[i]);
	}
}

//îsñkéûÇÃëDï™âÉVÅ[Éì
void fune_move(int j) {
	int i;
	const char *head[6] = { "====------=*",
							 "|Å°Å†Å†",
							 "|==-*Å_",
							 "|==-*Å^",
							 "|Å°Å†Å†",
							 "====------=*",
	};

	const char *botom[8] = { "{==========}",
							 "|Å†Å°Å†Å°Å†Å†Å†Å†",
							 "|Å°Å†Å°Å†Å°Å†Å†Å†",
							 "|Å°Å°Å°Å°Å°Å°Å°Å°",
							 "|Å°Å°Å°Å°Å°Å°Å°Å°",
							 "|Å†Å°Å†Å°Å†Å†Å†Å†",
							 "|Å°Å†Å°Å†Å°Å†Å†Å†",
							 "{==========}",
	};
	const char *leg[6] = {  "=====|----------",
							"=====|Å°Å°Å°Å°Å°",
							"     |Å°Å†Å†Å†Å†",
							"     |Å°Å†Å†Å†Å†",
							"=====|Å°Å°Å°Å°Å°",
							"=====|----------",
	};

	gotoxy(3, 20 + j);
	clreol();
	gotoxy(3, 28 - j);
	clreol();

	for (i = 0; i < 6; i++) {
		gotoxy(4, 21 + i + j);
		printf("%s\n", leg[i]);
	}
	for (i = 0; i < 8; i++) {
		gotoxy(20, 20 + i - j);
		printf("%s\n", botom[i]);
	}

	for (i = 0; i < 6; i++) {
		gotoxy(37, 21 + i + j);
		printf("%s\n", head[i]);
	}
	msleep(250);
}

//ëäéËÇÃëDÇÃï\é¶
void enemy_fune(void) {
	int i;
	const char *head[6] = {  "*=------====",
							 "     Å†Å†Å°|",
							 "       *-==|",
							 "       *-==|",
							 "     Å†Å†Å°|",
							 "*=------====",
	};

	const char *botom[8] = { "     {==========}",
							 "Å†Å†Å†Å°Å†Å°Å†Å°|",
							 "Å†Å†Å°Å†Å°Å†Å†Å†|",
							 "Å°Å°Å°Å°Å°Å°Å°Å°|",
							 "Å°Å°Å°Å°Å°Å°Å°Å°|",
							 "Å†Å°Å†Å°Å†Å†Å†Å†|",
							 "Å†Å†Å†Å°Å†Å°Å†Å°|",
							 "     {==========}",
	};
	const char *leg[6] = {  "----------|=====",
							"Å°Å°Å°Å°Å°|=====",
							"Å†Å†Å†Å†Å°|",
							"Å†Å†Å†Å†Å°|",
							"Å°Å°Å°Å°Å°|=====",
							"----------|=====",
	};
	for (i = 0; i < 6; i++) {
		gotoxy(70, 21 + i);
		printf("%s\n", head[i]);
	}

	for (i = 0; i < 8; i++) {
		gotoxy(82, 20 + i);
		printf("%s\n", botom[i]);
	}

	for (i = 0; i < 6; i++) {
		gotoxy(99, 21 + i);
		printf("%s\n", leg[i]);
	}
}

//É_ÉÅÅ[ÉWï\é¶
void battle_log(int damage, int attacknum, int hit) {
	gotoxy(3, 39);
	weapon(attacknum);
	printf("  %dî≠ñΩíÜÇµÇΩ", hit);
	gotoxy(3, 40);
	printf("%d", damage);
	printf("É_ÉÅÅ[ÉWÇó^Ç¶ÇΩ");
}

//êÌì¨âÊñ Çï\é¶Ç∑ÇÈ
void battle_display(char ship_name[32],char player_name[32],int you_hp,int x,int y,int text) {
	textcolor(text);
	gotoxy(x, y);
	printf("%sãââFíàêÌäÕ",ship_name);
	gotoxy(x, y + 1);
	printf("ëœãvóÕ:%d",you_hp);
	gotoxy(x, y + 2);
	printf("íÒì¬:%s",player_name);
	textcolor(15);
}

//çUåÇÇÃÉAÉjÉÅÅ[ÉVÉáÉì
void animation(int attacknum, int hit) {
	int i, j;
	int boom;
	int add = 0;
	int k;
	bool tama[2] = { false, false };

	boom = opensound("se/boom.mp3");
	k = 0;

	clrscr();
	fune();
	enemy_fune();

	if (attacknum == 1) {
		textcolor(1);
		gotoxy(42, 23);
		printf("(--)");
		gotoxy(42, 24);
		printf("(--)");
		msleep(500);
		gotoxy(44, 22);
		printf("(--)");
		gotoxy(42, 23);
		printf("(----)");
		gotoxy(42, 24);
		printf("(----)");
		gotoxy(44, 25);
		printf("(--)");
		msleep(1000);
		for (i = 0; i < 74; i++) {
			gotoxy(47 + i, 23);
			printf("=");
			gotoxy(47 + i, 24);
			printf("=");
		}
		if (hit >= 1) {
			playsound(boom, 0);
			textcolor(4);
			gotoxy(86, 21);
			printf("Å‹Å‹Å‹Å‹Å‹Å‹");
			gotoxy(82, 22);
			printf("Å‹Å‹Å‹Å‹Å‹Å‹Å‹Å‹Å‹Å‹");
			gotoxy(80, 23);
			printf("[[[]][]][][][[]]][]]][][][]");
			gotoxy(80, 24);
			printf("[[][][[[]][][[]][][[[]]]][]");
			gotoxy(82, 25);
			printf("Å‹Å‹Å‹Å‹Å‹Å‹Å‹Å‹Å‹Å‹");
			gotoxy(86, 26);
			printf("Å‹Å‹Å‹Å‹Å‹Å‹");
		}
		msleep(1000);
		textcolor(15);
	}

	if (attacknum == 2) {
		gotoxy(22, 19);
		printf("(--)");
		gotoxy(26, 19);
		printf("(--)");
		msleep(2000);

		tama[0] = true;

		for (i = 0; i < 5; i++) {
			for (j = 0; j < 20; j++) {
				fune();
				enemy_fune();


				if (tama[1] == true) {
					gotoxy(13 + (add - 15), 18 + (i - 1));
					printf("       ");
					gotoxy(13 + (add - 15), 19 + (i - 1));
					printf("       ");
					gotoxy(14 + (add - 15), 18 + (i - 1));
					printf("[=+@+=]");
					gotoxy(14 + (add - 15), 19 + (i - 1));
					printf("[=+@+=]");
				}

				if (tama[0] == true) {
					gotoxy(17 + add, 18 + i);
					printf("       ");
					gotoxy(17 + add, 19 + i);
					printf("       ");
					gotoxy(18 + add, 18 + i);
					printf("[=+@+=]");
					gotoxy(18 + add, 19 + i);
					printf("[=+@+=]");
				}

				if (add == 65 && hit > 0 || add == 80 && hit > 0) {
					enemy_fune();
					playsound(boom, 0);
					textcolor(4);
					gotoxy(86, 21);
					printf("Å‹Å‹Å‹Å‹Å‹Å‹");
					gotoxy(82, 22);
					printf("Å‹Å‹Å‹Å‹Å‹Å‹Å‹Å‹");
					gotoxy(80, 23);
					printf("[[[]][]][][][]][][]");
					gotoxy(80, 24);
					printf("[[][][[[]][][]][][]");
					gotoxy(82, 25);
					printf("Å‹Å‹Å‹Å‹Å‹Å‹Å‹Å‹");
					gotoxy(86, 26);
					printf("Å‹Å‹Å‹Å‹Å‹Å‹");
					textcolor(15);
					msleep(500);
					tama[k] = false;
					k++;
					hit--;
				}
				add++;

				msleep(2);
			}
			gotoxy(13 + (add - 15), 18 + (i - 1));
			printf("       ");

			gotoxy(17 + add, 18 + i);
			printf("       ");

			if (tama[0] == true) {
				tama[1] = true;
			}

		}
		clrscr();
		fune();
		enemy_fune();
		msleep(1000);

	}

	if (attacknum == 3) {

		tama[0] = true;

		for (i = 0; i < 5; i++) {
			for (j = 0; j < 20; j++) {
				fune();
				enemy_fune();

				if (tama[1] == true) {
					gotoxy(17 + (add - 15), 20 + (i - 1));
					printf("     ");
					gotoxy(17 + (add - 15), 21 + (i - 1));
					printf("     ");
					gotoxy(18 + (add - 15), 20 + (i - 1));
					printf("---Å_");
					gotoxy(18 + (add - 15), 21 + (i - 1));
					printf("---Å^");
				}

				if (tama[0] == true) {
					gotoxy(17 + add, 20 + i);
					printf("       ");
					gotoxy(17 + add, 21 + i);
					printf("       ");
					gotoxy(18 + add, 20 + i);
					printf("---Å_");
					gotoxy(18 + add, 21 + i);
					printf("---Å^");
				}

				if (add == 65 && hit > 0 || add == 80 && hit > 0) {
					enemy_fune();
					playsound(boom, 0);
					textcolor(4);
					gotoxy(86, 21);
					printf("Å‹Å‹Å‹Å‹Å‹Å‹");
					gotoxy(82, 22);
					printf("Å‹Å‹Å‹Å‹Å‹Å‹Å‹Å‹");
					gotoxy(80, 23);
					printf("[[[]][]][][][]][][]");
					gotoxy(80, 24);
					printf("[[][][[[]][][]][][]");
					gotoxy(82, 25);
					printf("Å‹Å‹Å‹Å‹Å‹Å‹Å‹Å‹");
					gotoxy(86, 26);
					printf("Å‹Å‹Å‹Å‹Å‹Å‹");
					textcolor(15);
					msleep(500);
					tama[k] = false;
					k++;
					hit--;
				}

				add++;

				msleep(5);
			}

			gotoxy(17 + (add - 15), 20 + (i - 1));
			printf("      ");

			if (tama[0] == true) {
				tama[1] = true;
			}
		}
		clrscr();
		fune();
		enemy_fune();
		msleep(1000);
	}

	if (attacknum == 4) {

		tama[0] = true;

		for (i = 0; i < 5; i++) {
			for (j = 0; j < 20; j++) {
				fune();
				enemy_fune();

				if (tama[1] == true) {
					gotoxy(17 + (add - 15), 19 + (i - 1));
					printf("      ");
					gotoxy(18 + (add - 15), 19 + (i - 1));
					printf("==ÅúÅÑ");
				}

				if (tama[0] == true) {
					gotoxy(17 + add, 18 + i);
					printf("      ");
					gotoxy(17 + add, 19 + i);
					printf("      ");
					gotoxy(18 + add, 19 + i);
					printf("==ÅúÅÑ");
				}

				if (add == 65 && hit > 0 || add == 80 && hit > 0) {
					enemy_fune();
					playsound(boom, 0);
					textcolor(4);
					gotoxy(86, 21);
					printf("Å‹Å‹Å‹Å‹Å‹Å‹");
					gotoxy(82, 22);
					printf("Å‹Å‹Å‹Å‹Å‹Å‹Å‹Å‹");
					gotoxy(80, 23);
					printf("[[[]][]][][][]][][]");
					gotoxy(80, 24);
					printf("[[][][[[]][][]][][]");
					gotoxy(82, 25);
					printf("Å‹Å‹Å‹Å‹Å‹Å‹Å‹Å‹");
					gotoxy(86, 26);
					printf("Å‹Å‹Å‹Å‹Å‹Å‹");
					textcolor(15);
					msleep(500);
					tama[k] = false;
					k++;
					hit--;
				}

				add++;

				msleep(5);
			}

			gotoxy(17 + (add - 15), 19 + (i - 1));
			printf("      ");

			if (tama[0] == true) {
				tama[1] = true;
			}
		}
		clrscr();
		fune();
		enemy_fune();
		msleep(1000);
	}

	if (attacknum == 5) {

		tama[0] = true;

		for (i = 0; i < 5; i++) {
			for (j = 0; j < 20; j++) {
				fune();
				enemy_fune();

				if (tama[1] == true) {
					gotoxy(17 + (add - 15), 19 + (i - 1));
					printf("  ");
					gotoxy(18 + (add - 15), 19 + (i - 1));
					printf("Åù");
				}

				if (tama[0] == true) {
					gotoxy(17 + add, 18 + i);
					printf("  ");
					gotoxy(17 + add, 19 + i);
					printf("  ");
					gotoxy(18 + add, 19 + i);
					printf("Åù");
				}


				if (add == 65 && hit > 0 || add == 80 && hit > 0) {
					enemy_fune();
					playsound(boom, 0);
					textcolor(4);
					gotoxy(86, 21);
					printf("Å‹Å‹Å‹Å‹Å‹Å‹");
					gotoxy(82, 22);
					printf("Å‹Å‹Å‹Å‹Å‹Å‹Å‹Å‹");
					gotoxy(80, 23);
					printf("[[[]][]][][][]][][]");
					gotoxy(80, 24);
					printf("[[][][[[]][][]][][]");
					gotoxy(82, 25);
					printf("Å‹Å‹Å‹Å‹Å‹Å‹Å‹Å‹");
					gotoxy(86, 26);
					printf("Å‹Å‹Å‹Å‹Å‹Å‹");
					textcolor(15);
					msleep(500);
					tama[k] = false;
					k++;
					hit--;
				}

				add++;

				msleep(3);
			}

			gotoxy(17 + (add - 15), 19 + (i - 1));
			printf("    ");

			if (tama[0] == true) {
				tama[1] = true;
			}

		}
		clrscr();
		fune();
		enemy_fune();
		msleep(1000);
	}

	closesound(boom);

}

//É^Å[ÉìèIóπéûÇÃÉNÅ[ÉãÉ_ÉEÉìÇÃåvéZ
void cooldowncnt(void) {
	int i;

	for (i = 0; i <= 2; i++) {
		cooldown[i]--;
	}
}

//ÉäÉgÉâÉCÇµÇΩÇ∆Ç´ÇÃèâä˙âªèàóù
void connldownreflesh(void) {
	int i;

	for (i = 0; i < 3; i++) {
		cooldown[i] = 0;
		ai_cooldown[i] = 0;
	}
}

//égópÇµÇΩïêäÌÇÃï\é¶
void weapon(int weapon) {
	if (weapon == 1) {
		printf("É^ÉCÉ^ÉìÉâÉìÉXÇégópÇµÇΩÅB");
	}
	else if (weapon == 2) {
		printf("éñè€ïˆâÛñCÇégópÇµÇΩÅB");
	}
	else if (weapon == 3) {
		printf("ëÂå^é¿íeñCÇégópÇµÇΩÅB");
	}
	else if (weapon == 4) {
		printf("É}ÉXÉhÉâÉCÉoÅ[ÇégópÇµÇΩÅB");
	}
	else if (weapon == 5) {
		printf("ÉIÅ[ÉgÉLÉÉÉmÉìÇégópÇµÇΩÅB");
	}
	else {
		printf("ëÃìñÇΩÇËÇÇµÇΩÅB");
	}
}

//ì¸óÕâÊñ 
int battle_input(void) {
	gotoxy(4,39);
	printf("âΩÇÇµÇ‹Ç∑Ç©ÅH\n");
	gotoxy(4, 40);
	//keyïœêîÇ…ÇÊÇ¡ÇƒÉJÅ[É\ÉãÇÃà íuÇïœÇ¶ÇÈ
	if (key==0) {
		printf("ìÒÉA çUåÇ ÉVÅ[ÉãÉhìWäJ ÉXÉLÉbÉv");
	}
	else if (key == 1) {
		printf("çUåÇ ìÒÉAÉVÅ[ÉãÉhìWäJ ÉXÉLÉbÉv");
	}
	else {
		printf("çUåÇ ÉVÅ[ÉãÉhìWäJ ìÒÉAÉXÉLÉbÉv");
	}

	//ÉLÅ[ì¸óÕë“Çø
	getkey = getch();

	//ç∂ñÓàÛÉLÅ[ÇâüÇ≥ÇÍÇΩÇ∆Ç´
	if (getkey == 0x4B && key > 0) {
		key--;
	}

	//ç∂ñÓàÛÉLÅ[ÇâüÇ≥ÇÍÇΩÇ∆Ç´
	if (getkey == 0x4D && key < 2) {
		key++;
	}

	//ÉGÉìÉ^Å[ÉLÅ[ÇâüÇ≥ÇÍÇΩÇ∆Ç´
	if (getkey == 0x0d) {
		//ÉLÅ[ÇÃà íuÇ…ÇÊÇ¡ÇƒïœÇ¶ÇÈ
		if (key == 0) {
			return 1;
		}
		else if (key == 1) {
			return 2;
		}
		else if (key == 2) {
			return 3;
		}
		else {

		}
	}
	return 0;
}

//ëIëÇ≈çUåÇÇëIëÇµÇΩÇ∆Ç´
int battle_attack(int T, int XL, int L, int M, int S, char moji1[MOJIRETU], char moji2[MOJIRETU], char moji3[MOJIRETU], int eshiphp) {
	//ïœêîÇÃèâä˙âª(ÉJÅ[É\ÉãÇèâä˙à íuÇ…Ç∑ÇÈ)
	key = 0;
	getkey = 0;

	//çUåÇäÆóπÇ∑ÇÈÇ‹Ç≈ÉãÅ[Év
	while (1) {
		gotoxy(4, 40);
		
		//çUåÇÇ≈Ç´ÇÈéËíiÇ™Ç»Ç¢èÍçá
		if ((strcmp(moji2, "É}ÉXÉhÉâÉCÉoÅ[") != 0 && strcmp(moji3, "É}ÉXÉhÉâÉCÉoÅ[") != 0 && strcmp(moji2, "ÉIÅ[ÉgÉLÉÉÉmÉì") != 0 && strcmp(moji3, "ÉIÅ[ÉgÉLÉÉÉmÉì") != 0) && (strcmp(moji1, "É^ÉCÉ^ÉìÉâÉìÉX") != 0 || cooldown[0] > 0) && (strcmp(moji1, "éñè€ïˆâÛñC") != 0 || cooldown[1] > 0) && (strcmp(moji1, "ëÂå^é¿íeñC") != 0 || strcmp(moji2, "ëÂå^é¿íeñC") != 0 || strcmp(moji3, "ëÂå^é¿íeñC") != 0) && cooldown[2] > 0) {
			return 6;
		}

		//keyïœêîÇ…ÇÊÇ¡ÇƒÉJÅ[É\ÉãÇÃà íuÇïœÇ¶ÇÈ
		if (key == 0) {
			printf("ÉjÉA");
			printf("%s  ", moji1);
			printf("%s  ", moji2);
			printf("%s", moji3);
		}
		if (key == 1) {
			printf("%s  ", moji1);
			printf("ÉjÉA");
			printf("%s  ", moji2);
			printf("%s", moji3);
		}
		if (key == 2) {
			printf("%s  ", moji1);
			printf("%s  ", moji2);
			printf("ÉjÉA");
			printf("%s", moji3);
		}

		//ÉLÅ[ì¸óÕë“Çø
		getkey = getch();

		//ç∂ñÓàÛÉLÅ[Çì¸óÕÇ≥ÇÍÇΩèÍçá
		if (getkey == 0x4B && key > 0) {
			key--;
		}
		//âEñÓàÛÉLÅ[Çì¸óÕÇ≥ÇÍÇΩèÍçá
		if (getkey == 0x4D && key < 2) {
			key++;
		}
		//ÉGÉìÉ^Å[ÉLÅ[Çì¸óÕÇ≥ÇÍÇΩèÍçá
		if (getkey == 0x0d) {
			gotoxy(4, 36);

			//keyïœêîÇÃà íuÇ≈ïœìÆ
			if (key == 0) {

				//í¥ÅXëÂå^ï∫äÌÇ™ëIëÇ≥ÇÍÇƒÇ¢ÇΩèÍçá
				if (strcmp(moji1, "É^ÉCÉ^ÉìÉâÉìÉX") == 0) {

					//ÉNÅ[ÉãÉ_ÉEÉìÇ™äÆóπÇµÇƒÇ¢ÇÈèÍçáçUåÇÇ∑ÇÈ
					if (cooldown[0] <= 0) {
						cooldown[0] = 6;		//ÉNÅ[ÉãÉ_ÉEÉìÇê›íË

						return 1;
					}

					else {
						printf("Ç‹ÇæçUåÇÇ≈Ç´Ç‹ÇπÇÒ(Ç†Ç∆%dÉ^Å[Éì)",cooldown[0]);
					}
				}
				//í¥ëÂå^ï∫äÌÇ™ëIëÇ≥ÇÍÇƒÇ¢ÇΩèÍçá
				else if (strcmp(moji1, "éñè€ïˆâÛñC") == 0) {
					//ÉNÅ[ÉãÉ_ÉEÉìÇ™äÆóπÇµÇƒÇ¢ÇÈèÍçáçUåÇÇ∑ÇÈ
					if (cooldown[1] <= 0) {
						cooldown[1] = 4;		//ÉNÅ[ÉãÉ_ÉEÉìÇê›íË

						return 2;
					}
					else {
						printf("Ç‹ÇæçUåÇÇ≈Ç´Ç‹ÇπÇÒ(Ç†Ç∆%dÉ^Å[Éì)",cooldown[1]);
					}
				}
				//ëÂå^ï∫äÌÇ™ëIëÇ≥ÇÍÇƒÇ¢ÇΩèÍçá
				else {
					//ÉNÅ[ÉãÉ_ÉEÉìÇ™äÆóπÇµÇƒÇ¢ÇÈèÍçáçUåÇÇ∑ÇÈ
					if (cooldown[2] <= 0) {
						cooldown[2] = 3;		//ÉNÅ[ÉãÉ_ÉEÉìÇê›íË

						return 3;
					}
					else {
						printf("Ç‹ÇæçUåÇÇ≈Ç´Ç‹ÇπÇÒ(Ç†Ç∆%dÉ^Å[Éì)", cooldown[2]);
					}
				}
			}

			else if (key == 1) {
				//ëÂå^ï∫äÌÇ™ëIëÇ≥ÇÍÇƒÇ¢ÇΩèÍçá
				if (strcmp(moji2, "ëÂå^é¿íeñC") == 0) {
					//ÉNÅ[ÉãÉ_ÉEÉìÇ™äÆóπÇµÇƒÇ¢ÇÈèÍçáçUåÇÇ∑ÇÈ
					if (cooldown[2] <= 0) {
						cooldown[2] = 3;		//ÉNÅ[ÉãÉ_ÉEÉìÇê›íË

						return 3;
					}
					else {
						printf("Ç‹ÇæçUåÇÇ≈Ç´Ç‹ÇπÇÒ(Ç†Ç∆%dÉ^Å[Éì)", cooldown[2]);
					}
				}
				//íÜå^ï∫äÌÇ™ëIëÇ≥ÇÍÇƒÇ¢ÇΩèÍçá(ÉNÅ[ÉãÉ_ÉEÉìÇÕÇ»Ç¢)
				else if (strcmp(moji2, "É}ÉXÉhÉâÉCÉoÅ[") == 0) {

					return 4;
				}
				//è¨å^ï∫äÌÇ™ëIëÇ≥ÇÍÇƒÇ¢ÇΩèÍçá(ÉNÅ[ÉãÉ_ÉEÉìÇÕÇ»Ç¢)
				else if (strcmp(moji2, "ÉIÅ[ÉgÉLÉÉÉmÉì") == 0) {

					return 5;
				}
				//ëÂå^ï∫äÌÇ™Ç©Ç‘Ç¡ÇƒÇ¢ÇƒÅAÇ»Ç…Ç‡ê›íËÇ≥ÇÍÇƒÇ¢Ç»Ç¢èÍçá
				else {
					clrscr();
					return 7;
				}
			}

			else {
				//ëÂå^ï∫äÌÇ™Ç†Ç¡Çƒì™Ç∆ì∑ëÃÇ…ëÂå^ï∫äÌÇ™ëïîıÇ≥ÇÍÇƒÇ¢Ç»Ç¢èÍçá
				if (strcmp(moji3, "ëÂå^é¿íeñC") == 0 && strcmp(moji2, "ëÂå^é¿íeñC") != 0 && strcmp(moji1, "ëÂå^é¿íeñC") != 0) {
					//ÉNÅ[ÉãÉ_ÉEÉìÇ™äÆóπÇµÇƒÇ¢ÇÈèÍçáçUåÇÇ∑ÇÈ
					if (cooldown[2] <= 0) {
						cooldown[2] = 3;		//ÉNÅ[ÉãÉ_ÉEÉìÇê›íË

						return 3;
					}
					else {
						printf("Ç‹ÇæçUåÇÇ≈Ç´Ç‹ÇπÇÒ(Ç†Ç∆%dÉ^Å[Éì)", cooldown[2]);
					}
				}
				//íÜå^ï∫äÌÇ™Ç†Ç¡Çƒì∑ëÃÇ…íÜå^ï∫äÌÇ™ëïîıÇ≥ÇÍÇƒÇ¢Ç»Ç¢èÍçá(ÉNÅ[ÉãÉ_ÉEÉìÇÕÇ»Ç¢)
				else if (strcmp(moji3, "É}ÉXÉhÉâÉCÉoÅ[") == 0 && strcmp(moji2, "É}ÉXÉhÉâÉCÉoÅ[") != 0) {

					return 4;
				}
				//è¨å^ï∫äÌÇ™Ç†Ç¡Çƒì∑ëÃÇ…è¨å^ï∫äÌÇ™ëïîıÇ≥ÇÍÇƒÇ¢Ç»Ç¢èÍçá(ÉNÅ[ÉãÉ_ÉEÉìÇÕÇ»Ç¢)
				else if (strcmp(moji3, "ÉIÅ[ÉgÉLÉÉÉmÉì") == 0 && strcmp(moji2, "ÉIÅ[ÉgÉLÉÉÉmÉì") != 0) {

					return 5;
				}
				//ëÂå^ï∫äÌÇ™Ç©Ç‘Ç¡ÇƒÇ¢ÇƒÅAÇ»Ç…Ç‡ê›íËÇ≥ÇÍÇƒÇ¢Ç»Ç¢èÍçá
				else{
					clrscr();
					return 7;
				}
			}

			//ÉLÅ[ì¸óÕë“Çø
			getch();
		}
		if (getkey == 0x1b) {
			clrscr();
			return 7;
		}
	}

}

//É_ÉÅÅ[ÉWåvéZÇçsÇ§
int battle_attack_shori(bool youdef,int atari,int flag,int pe) {
	//ïœêîêÈåæ
	int damage = 0;

	//êÌì¨âÊñ Ç≈ñΩíÜÇ∑ÇÈÇ∆É_ÉÅÅ[ÉWåvéZÇ∑ÇÈ
	if (atari >= 1 || flag == 6) {
		//í¥ÅXëÂå^ï∫äÌÇÃèÍçá
		if (flag == 1) {
			damage = 4000 + (rand() & 4001) + (rand() & pe) - ((youdef * 2) * 2000);			//É_ÉÅÅ[ÉWÇ3000Å`7000Ç…Ç∑ÇÈ
		}
		//í¥ëÂå^ï∫äÌÇÃèÍçá
		else if (flag == 2) {
			damage = (((2000 + (rand() & 2001)) + (rand() & pe)) * atari) - ((youdef * 2) * 1750);		//É_ÉÅÅ[ÉWÇ1000Å`3000 * 2Ç…Ç∑ÇÈ
		}
		//ëÂå^ï∫äÌÇÃèÍçá
		else if (flag == 3) {
			damage = (((200 + (rand() & 201)) + (rand() & pe)) * atari) - ((youdef * 2) * 1250);		//É_ÉÅÅ[ÉWÇ200Å`400 * ï∫äÌêîÇ…Ç∑ÇÈ
		}
		//íÜå^ï∫äÌÇÃèÍçá
		else if (flag == 4) {
			damage = (((40 + (rand() & 41)) + (rand() & pe)) * atari) - ((youdef * 2) * 750);		//É_ÉÅÅ[ÉWÇ40Å`80 * ï∫äÌêîÇ…Ç∑ÇÈ
		}
		//è¨å^ëÂå^ï∫äÌÇÃèÍçá
		else if (flag == 5) {
			damage = (((10 + (rand() & 11)) + (rand() & pe)) * atari) - ((youdef * 2) * 250);		//É_ÉÅÅ[ÉWÇ10Å`40 * ï∫äÌêîÇ…Ç∑ÇÈ
		}
		//ëSÇƒÇÃï∫äÌÇ™égópïsâ¬ÇÃèÍçáÅAâΩÇÁÇ©ÇÃéËíiÇ≈É_ÉÅÅ[ÉWÇó^Ç¶ÇÈ(ÇªÇÃë„ÇÌÇËÉ_ÉÅÅ[ÉW1ÇÃÇ›)
		else {
			damage = 1;		//É_ÉÅÅ[ÉWÇ1Ç…Ç∑ÇÈ
		}

		//çUåÇÇ™0à»â∫Ç…Ç»Ç¡ÇΩèÍçá0Ç…Ç∑ÇÈ
		if (damage < 0) {
			damage = 0;
		}
	}
	//ëSíeäOÇµÇΩèÍçáÅAÉ_ÉÅÅ[ÉW0Çó^Ç¶ÇÈ
	else {
		damage = 0;		//É_ÉÅÅ[ÉWÇ0Ç…Ç∑ÇÈ
	}

	return damage;
}

//ëäéËÇÃçUåÇèàóù
int ai_battle(bool youdef, int youhp,int ee, char moji1[32], char moji2[32], char moji3[32], int L, int M, int S) {
	//ïœêîêÈåæ
	int kakuritu, attack_kakuritu, flag, i;	//óêêîÇ≈çUåÇÇåàÇﬂÇÈ(kakuritu),çUåÇéËíiÇåàÇﬂÇÈ(flag),forï∂ÇÃíÜÇ…ì¸ÇÍÇÈ
	int damage = 0;
	int hit = 0;
	int sound;
	sound = opensound("se/boom.mp3");
	//çUåÇäÆóπÇ‹Ç≈ÉãÅ[Év
	while (1) {
		//óêêîÇåàÇﬂÇÈ
		kakuritu = rand() % 100;

		//0Å`30ÇÃílÇ™èoÇΩÇ∆Ç´
		if (kakuritu <= 30) {
			//í¥ÅXëÂå^ï∫äÌÇ™ëïîıÇ≥ÇÍÇƒÇ¢ÇΩÇ∆Ç´
			if (strcmp(moji1, "É^ÉCÉ^ÉìÉâÉìÉX") == 0) {
				//ÉNÅ[ÉãÉ_ÉEÉìÇ™äÆóπÇµÇƒÇ¢ÇÈÇ∆Ç´
				if (ai_cooldown[0] <= 0) {
					ai_cooldown[0] = 6;
					flag = 1;

					attack_kakuritu = rand() % 100;
					if (attack_kakuritu <= 60) {
						hit++;
					}

					damage = battle_attack_shori(youdef, hit, flag, ee);
					break;
				}
			}
			//í¥ëÂå^ï∫äÌÇ™ëïîıÇ≥ÇÍÇƒÇ¢ÇΩÇ∆Ç´
			else if (strcmp(moji1, "éñè€ïˆâÛñC") == 0) {
				//ÉNÅ[ÉãÉ_ÉEÉìÇ™äÆóπÇµÇƒÇ¢ÇÈÇ∆Ç´
				if (ai_cooldown[1] <= 0) {
					ai_cooldown[1] = 4;
					flag = 2;

					for (i = 0; i < 2; i++) {
						attack_kakuritu = rand() % 100;
						if (attack_kakuritu <= 60) {
							hit++;
						}
					}

					damage = battle_attack_shori(youdef, hit, flag, ee);		//çUåÇèàóù
					break;
				}
			}
			//ëÂå^ï∫äÌÇ™ëïîıÇ≥ÇÍÇƒÇ¢ÇΩÇ∆Ç´
			else {
				//ÉNÅ[ÉãÉ_ÉEÉìÇ™äÆóπÇµÇƒÇ¢ÇÈÇ∆Ç´
				if (ai_cooldown[2] <= 0) {
					ai_cooldown[2] = 3;
					flag = 3;

					for (i = 0; i < L; i++) {
						attack_kakuritu = rand() % 100;
						if (attack_kakuritu <= 60) {
							hit++;
						}
					}
					damage = battle_attack_shori(youdef, hit, flag, ee);		//çUåÇèàóù
					break;
				}
			}
		}

		//31Å`60ÇÃílÇ™èoÇΩÇ∆Ç´
		else if (kakuritu >= 31 && kakuritu <= 60) {
			//ëÂå^ï∫äÌÇ™ëïîıÇ≥ÇÍÇƒÇ¢ÇΩÇ∆Ç´
			if (strcmp(moji2, "ëÂå^é¿íeñC") == 0) {
				//ÉNÅ[ÉãÉ_ÉEÉìÇ™äÆóπÇµÇƒÇ¢ÇÈÇ∆Ç´
				if (ai_cooldown[2] <= 0) {
					ai_cooldown[2] = 3;
					flag = 3;

					for (i = 0; i < L; i++) {
						attack_kakuritu = rand() % 100;
						if (attack_kakuritu <= 60) {
							hit++;
						}
					}

					damage = battle_attack_shori(youdef, hit, flag, ee);		//çUåÇèàóù
					break;
				}
			}
			//íÜå^ï∫äÌÇ™ëïîıÇ≥ÇÍÇƒÇ¢ÇΩÇ∆Ç´(ÉNÅ[ÉãÉ_ÉEÉìÇÕïKóvÇ»Ç¢)
			else if (strcmp(moji2, "É}ÉXÉhÉâÉCÉoÅ[") == 0) {
				flag = 4;

				for (i = 0; i < M; i++) {
					attack_kakuritu = rand() % 100;
					if (attack_kakuritu <= 60) {
						hit++;
					}
				}
				damage = battle_attack_shori(youdef, hit, flag, ee);		//çUåÇèàóù
				break;
			}
			//è¨å^ï∫äÌÇ™ëïîıÇ≥ÇÍÇƒÇ¢ÇΩÇ∆Ç´(ÉNÅ[ÉãÉ_ÉEÉìÇÕïKóvÇ»Ç¢)
			else if (strcmp(moji2, "ÉIÅ[ÉgÉLÉÉÉmÉì") == 0) {
				flag = 5;

				for (i = 0; i < S; i++) {
					attack_kakuritu = rand() % 100;
					if (attack_kakuritu <= 60) {
						hit++;
					}
				}

				damage = battle_attack_shori(youdef, hit, flag, ee);		//çUåÇèàóù
				break;
			}
			else {

			}
		}

		//61Å`90ÇÃílÇ™èoÇΩÇ∆Ç´
		else if (kakuritu >= 61 && kakuritu <= 90) {
			//ëÂå^ï∫äÌÇ™ëïîıÇ≥ÇÍÇƒÇ¢ÇΩÇ∆Ç´
			if (strcmp(moji3, "ëÂå^é¿íeñC") == 0 ) {
				//ÉNÅ[ÉãÉ_ÉEÉìÇ™äÆóπÇµÇƒÇ¢ÇΩÇ∆Ç´
				if (ai_cooldown[2] <= 0) {
					flag = 3;
					ai_cooldown[2] = 3;

					for (i = 0; i < L; i++) {
						attack_kakuritu = rand() % 100;
						if (attack_kakuritu <= 60) {
							hit++;
						}
					}

					damage = battle_attack_shori(youdef, hit, flag, ee);		//çUåÇèàóù
					break;
				}
			}
			//íÜå^ï∫äÌÇ™ëïîıÇ≥ÇÍÇƒÇ¢ÇΩÇ∆Ç´(ÉNÅ[ÉãÉ_ÉEÉìÇÕïKóvÇ»Ç¢)
			else if (strcmp(moji3, "É}ÉXÉhÉâÉCÉoÅ[") == 0 ) {
				flag = 4;
				for (i = 0; i < M; i++) {
					attack_kakuritu = rand() % 100;
					if (attack_kakuritu <= 60) {
						hit++;
					}
				}

				damage = battle_attack_shori(youdef, hit, flag, ee);		//çUåÇèàóù
				break;
			}
			//è¨å^ï∫äÌÇ™ëïîıÇ≥ÇÍÇƒÇ¢ÇΩÇ∆Ç´(ÉNÅ[ÉãÉ_ÉEÉìÇÕïKóvÇ»Ç¢)
			else if (strcmp(moji3, "ÉIÅ[ÉgÉLÉÉÉmÉì") == 0) {
				flag = 5;

				for (i = 0; i < S; i++) {
					attack_kakuritu = rand() % 100;
					if (attack_kakuritu <= 60) {
						hit++;
					}
				}

				damage = battle_attack_shori(youdef, hit, flag, ee);		//çUåÇèàóù
				break;
			}
			else {

			}
		}

		//ämó¶Ç©ÇÁäOÇÍÇΩèÍçáÇ‡Ç§àÍìxÇ‚ÇËíºÇµ
		else {

		}

		//çUåÇèoóàÇ»Ç¢Ç∆Ç´âΩÇ‡ÇπÇ∏Ç…ÉãÅ[ÉvÇ©ÇÁî≤ÇØèoÇ∑
		if ((strcmp(moji2, "É}ÉXÉhÉâÉCÉoÅ[") != 0 && strcmp(moji3, "É}ÉXÉhÉâÉCÉoÅ[") != 0 && strcmp(moji2, "ÉIÅ[ÉgÉLÉÉÉmÉì") != 0 && strcmp(moji2, "ÉIÅ[ÉgÉLÉÉÉmÉì") != 0) && (strcmp(moji1, "É^ÉCÉ^ÉìÉâÉìÉX") != 0 || ai_cooldown[0] > 0) && (strcmp(moji1, "éñè€ïˆâÛñC") != 0 || ai_cooldown[1] > 0) && (strcmp(moji1, "ëÂå^é¿íeñC") != 0 || strcmp(moji2, "ëÂå^é¿íeñC") != 0 || strcmp(moji3, "ëÂå^é¿íeñC") != 0) && ai_cooldown[2] > 0) {
			flag = 6;
			damage = battle_attack_shori(youdef, 1, flag, ee);		//çUåÇèàóù
			break;
		}

	}

	youhp -= damage;

	//É^Å[ÉìèIóπéûÇ…ÉNÅ[ÉãÉ_ÉEÉìéûä‘Ç1å∏ÇÁÇ∑
	for (i = 0; i <= 2; i++) {
		ai_cooldown[i] -= 1;
	}
	playsound(sound, 0);
	battle_log(damage, flag, hit);
	rewind(stdin);
	getchar();

	closesound(sound);

	return youhp;
}

//çUåÇâÊñ 
int battlepart(int kazu) {

	//ïœêîêÈåæ
	int i;
	int atari = 0;
	int x = 8, y = 1;
	int fps = 0;
	int number = 500;
	int sum = 0;
	int enter;
	bool hit = false;

	const char *nothing[7] = { "        ",
							   "           ",
							   "             ",
							   "              ",
							   "             ",
							   "           ",
							   "        ",
	};

	const char *cursor[7] = {"      ||",
							 "   ===||===",
							 " ===  ||  ===",
							 "------Åù------",
							 " ===  ||  ===",
							 "   ===||===",
							 "      ||",
	};

	const char *target[7] = {"  Å°Å°Å°Å°Å°Å°Å°",
							 "Å°              Å°",
							 "Å°              Å°",
							 "Å°      Åù      Å°",
							 "Å°              Å°",
							 "Å°              Å°",
							 "  Å°Å°Å°Å°Å°Å°Å°"
	};

	clrscr();

	//ÉGÉìÉ^Å[ÉLÅ[Ç™âüÇ≥ÇÍÇÈÇ‹Ç≈ÉãÅ[Év
	while (1) {
		if (kbhit()) {		//Ç«Ç±Ç©ÇÃÉLÅ[Ç™âüÇ≥ÇÍÇΩÇ∆Ç´
			enter = getch();		//ÇªÇÃÉLÅ[ÇÃèÓïÒÇ"key"ïœêîÇ…Ç¢ÇÍÇÈ
			if (enter == 0x0d) {		//"key"Ç…ì¸Ç¡ÇΩÇÃÇ™ÉGÉìÉ^Å[ÉLÅ[ÇæÇ¡ÇΩèÍçá
				if (x > 80 && x < 100) {		//çUåÇîÕàÕì‡ÇÃèÍçá
					atari++;
					hit = true;
				}
				else {		//çUåÇîÕàÕäOÇÃèÍçá
					hit = false;
				}

				//íeÇÃó¨ÇÍÇÈÉXÉsÅ[Éhí≤êÆ 500Å`1000
				number = 500 + rand() & 501;
				sum++;
				x = 8;
				y = 1;
				fps = 0;
				clrscr();
			}
		}
		else if (x > 130) {
			number = 500 + rand() & 501;
			x = 8;
			y = 1;
			fps = 0;
			sum++;
			hit = false;
			clrscr();
		}

		if (sum == kazu) {
			break;
		}

		//numberÇÊÇËè„Ç…Ç»Ç¡ÇΩÇÁâÊëúèàóùÇÇ∑ÇÈ
		if (fps > number) {

			//ãÛîíï\é¶
			for (i = 0; i < 7; i++) {
				gotoxy(x - 8, y - 1 + i);
				printf("%s\n", nothing[i]);
			}

			//ìIï\é¶
			for (i = 0; i < 7; i++) {
				gotoxy(86, 10 + i);
				printf("%s\n", target[i]);
			}

			//ÉJÅ[É\Éãï\é¶
			for (i = 0; i < 7; i++) {
				gotoxy(x, y + i);
				printf("%s\n", cursor[i]);
			}

			gotoxy(4, 39);
			printf("%dâÒíÜ%dâÒ", kazu, sum + 1);

			if (hit == true) {
				textcolor(4);
				gotoxy(89, 19);
				printf("HIT");
				textcolor(15);
				msleep(50);
			}

			fps = 0;
			x += 8;
			y++;
			hit = false;
			msleep(20);
		}
		
		fps++;
	}

	return atari;
}